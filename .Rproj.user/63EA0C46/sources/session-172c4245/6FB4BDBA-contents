---
title: "ParsGBIF Manual"

author:
  - Pablo Hendrigo Alves de Melo^[Instituto Federal de Educação, Ciência e Tecnologia de Minas Gerais, pablopains@yahoo.com.br]
  - Nadia Bystriakova^[Natural History Museum, London, n_bystriakova@yahoo.com]
  - Alexandre Monro^[Royal Botanic Gardens, Kew, a.monro@kew.org]
  
date: "`r Sys.Date()`"
  
output: word_document

template: template.tex
---

```{r, include=FALSE}
options(tinytex.verbose = TRUE)
```

# ParsGBIF Manual


ParsGBIF package is designed to convert [Global Biodiversity Information Facility - GBIF](https://www.gbif.org/) species occurrence data to a more comprehensible format to be used for further analysis, e.g. spatial. The package provides tools for verifying and standardizing species scientific names and for selecting the most informative species records when duplicates are available. The Manual provides a brief introduction to ParsGBIF, with more information available from Help pages accessed via help(function_name).


## Installation

You can install the development version of ParsGBIF from [GitHub](https://github.com/).

To install ParsGBIF, run 
``` r
devtools::install_github("pablopains/ParsGBIF")
```

Please site ParsGBIF as:
```{r}
print(citation("ParsGBIF"), bibtex = FALSE)
```


## Example

__ParsGBIF makes it easy to get species occurrence records based on GBIF.__

### 1. GBIF data preparation
#### 1.1. Obtaining occurrence data of the herbarium specimen from GBIF

  1.1.1. Access a registered account in [GBIF](gbif.org) 
  
  1.1.2. Filter occurrences with the following parameters:
  
  * Basis of record: _Preserved specimen_
  * Occurrence status: _present_
  * Scientific name: _Botanical family name_ or __filter by other fields__

  1.1.3. Request to download information in __DARWIN CORE ARCHIVE FORMAT__
  
  1.1.4. Download compressed file and unzip downloaded file
  
  1.1.5. Use the __occurrence.txt__ file as input to the prepare_gbif_occurrence_data(gbif_occurrece_file = 'occurrence.txt') function
  
#### 1.2. Preparing occurrence data downloaded from GBIF 

To prepare occurrence data downloaded from GBIF to be used by ParsGBIF functions, run prepere_gbif_occurrence_data.

```{r example_prepare_gbif_occurrence_data, eval=TRUE, message=FALSE, warning=FALSE}
  library(ParsGBIF)

  help(prepare_gbif_occurrence_data)

  occ_file <- 'https://raw.githubusercontent.com/pablopains/ParsGBIF/main/dataGBIF/Achatocarpaceae/occurrence.txt'

  occ <- prepare_gbif_occurrence_data(gbif_occurrece_file = occ_file,
                                     columns = 'standard')

  colnames(occ)
 
  head(occ)
```


When parsing data, the user can choose between “standard” and “all” columns to be selected. The “standard” format has 54 data fields (columns), and the “all” format, 257 data fields (columns).

```{r example_select_gbif_fields, eval=TRUE, message=FALSE, warning=FALSE}
  library(ParsGBIF)

  help(select_gbif_fields)
  
  col_standard <- select_gbif_fields(columns = 'standard')
  
  str(col_standard)

  col_all <- select_gbif_fields(columns = 'all')

  str(col_all)
```


### 2. Extracting GBIF issue to rank the quality of geographic coordinates 

```{r example_extract_gbif_issue, eval=TRUE, message=FALSE, warning=FALSE}
  library(ParsGBIF)

  occ_file <- 'https://raw.githubusercontent.com/pablopains/ParsGBIF/main/dataGBIF/Achatocarpaceae/occurrence.txt'

  occ <- prepare_gbif_occurrence_data(gbif_occurrece_file = occ_file,
                                     columns = 'standard')
  
  
 occ_gbif_issue <- extract_gbif_issue(occ = occ)

 names(occ_gbif_issue)

 head(occ_gbif_issue$summary)

 colnames(occ_gbif_issue$occ_gbif_issue)
 
 head(occ_gbif_issue$occ_gbif_issue)

```

#### 2.1. GBIF Issue is a database...



### 3. Check species names against WCVP database


```{r example_batch_checkName_wcvp, eval=TRUE, message=FALSE, warning=FALSE}
library(ParsGBIF)

help(batch_checkName_wcvp)


# wcvp_names <- get_wcvp(read_only_to_memory = TRUE)$wcvp_names

# wcvp_names_Achatocarpaceae is a subset of data from the wcvp names database used only to demonstrate the use of the ParsGBIF package. See below alternatives of loading wcvp name database.

data(wcvp_names_Achatocarpaceae)
wcvp_names <- wcvp_names_Achatocarpaceae

occ_file <- 'https://raw.githubusercontent.com/pablopains/ParsGBIF/main/dataGBIF/Achatocarpaceae/occurrence.txt'

occ <- prepare_gbif_occurrence_data(gbif_occurrece_file = occ_file,
                                    columns = 'standard')

res_batch_checkName_wcvp <- batch_checkName_wcvp(occ = occ,
                                                 wcvp_names =  wcvp_names,
                                                 if_author_fails_try_without_combinations = TRUE,
                                                 wcvp_selected_fields = 'standard')

names(res_batch_checkName_wcvp)

head(res_batch_checkName_wcvp$summary)

head(res_batch_checkName_wcvp$occ_checkName_wcvp)

```


There are two ways to load WCVP name database: 

* ParsGBIF::get_wcvp() function 

* rWCVPdata package


#### 3.1. Getting WCVP database from ParsGBIF::get_wcvp() function

There is a potion to save the local copy, indicated to optimize future loads. Or always read the latest database version from <source> which always requires a download.

```{r example_checkName_wcvp, eval=FALSE, message=FALSE, warning=FALSE}
help(get_wcvp)

path_data <- tempdir() # you can change this folder

wcvp <- get_wcvp(url_source = 'http://sftp.kew.org/pub/data-repositories/WCVP/',
                  read_only_to_memory = FALSE,
                  path_results = path_data,
                  update = FALSE,
                  load_distribution = TRUE)

names(wcvp)

head(wcvp$wcvp_names)

colnames(wcvp$wcvp_names)

head(wcvp$wcvp_distribution)

colnames(wcvp$wcvp_distribution)
```


#### 3.2. Getting WCVP database from rWCVPdata package

Use the database version available in the package. After installing the package, loading the database is very fast. Small adjustments are needed for the data to be used by the ParsGBIF functions.

```{r example_install_rWCVPdata, eval=FALSE, message=FALSE, warning=FALSE}
# devtools::install_github(“matildabrown/rWCVPdata”) library(rWCVPdata)

library(rWCVPdata)

wcvp_names <- rWCVPdata::wcvp_names %\>%

# Small adjustments
dplyr::mutate(TAXON_NAME_U = toupper(taxon_name), 
              TAXON_AUTHORS_U = toupper(taxon_authors))

```

